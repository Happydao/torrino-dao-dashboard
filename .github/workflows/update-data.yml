name: Treasury Snapshot + Full Log

on:
  workflow_dispatch:       # avvio manuale
  schedule:
    - cron: "0 * * * *"    # ogni ora

permissions:
  contents: write          # serve per pushare i file in docs/

jobs:
  run-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci || npm i

      - name: Run token.js and capture full log
        env:
          HELIUS_API_KEY: ${{ secrets.HELIUS_API_KEY }}
          # WALLET_ADDRESS: ${{ vars.WALLET_ADDRESS }}  # opzionale
        run: |
          set -e
          node token.js | tee run.log

      - name: Save full log file to docs/logs and build index
        run: |
          set -e
          mkdir -p docs/logs
          NOW="$(date -u +%FT%TZ)"                             # es. 2025-10-25T21:05:00Z
          SAFE_TS="${NOW//:/-}"                                # ':' -> '-' per filename
          DEST="docs/logs/${SAFE_TS}_run-${GITHUB_RUN_ID}.log" # filename con timestamp+run
          mv run.log "$DEST"
          cp "$DEST" docs/logs/latest.txt

          # Aggiorna/crea l'indice JSON dei log
          if [ ! -f docs/logs/index.json ]; then
            echo "[]" > docs/logs/index.json
          fi

          SIZE=$(wc -c < "$DEST" | tr -d ' ')
          TMP="docs/logs/index.new.json"
          jq --arg file "$(basename "$DEST")" \
             --arg ts "$NOW" \
             --arg run "${GITHUB_RUN_ID}" \
             --arg size "$SIZE" \
             '([{file:$file, updatedAt:$ts, runId: ($run|tonumber), size: ($size|tonumber)}] + .)
              | sort_by(.updatedAt) | reverse
              | .[:100]' docs/logs/index.json > "$TMP"
          mv "$TMP" docs/logs/index.json

          # (Opzionale) pruna i file log più vecchi non presenti nell’indice:
          jq -r '.[].file' docs/logs/index.json > /tmp/keep.txt
          ls docs/logs/*.log | while read f; do
            base=$(basename "$f")
            if ! grep -qx "$base" /tmp/keep.txt; then rm -f "$f"; fi
          done

      - name: Extract JSON line to docs/data.json
        run: |
          mkdir -p docs
          JSON_LINE=$(grep -Eo '\{.*\}' docs/logs/latest.txt | tail -n1 || true)
          if [ -z "$JSON_LINE" ]; then
            echo "⚠️ Nessuna riga JSON trovata nel log"; exit 1;
          fi
          echo "$JSON_LINE" | jq --arg now "$(date -u +%FT%TZ)" '.updatedAt=$now' > docs/data.json

      - name: Commit & push docs/*
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: publish snapshot & full log"
          file_pattern: docs/*
